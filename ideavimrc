set visualbell

" Keep 3 lines around cursor visible
set scrolloff=3

set hlsearch             " Highlight searches
set ignorecase smartcase " Ignore case in all-lowercase searches
set incsearch            " Incremental search (search as you type)
set visualbell

set timeoutlen=200

let mapleader = ","
let maplocalleader = "\\"

nnoremap <Leader>0 ^
" Turn off search highlighting until the next search
nnoremap <leader>l :nohl<CR>
nnoremap <C-L> :nohl<CR>

" --- Enable IdeaVim plugins https://jb.gg/ideavim-plugins

Plug 'machakann/vim-highlightedyank'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-surround'

"" -- Map IDE actions to IdeaVim -- https://jb.gg/abva4t

" Track IDE actions:
" set trackactionids


"" Map \r to the Reformat Code action
"map \r <Action>(ReformatCode)

"" Map <leader>d to start debug
"map <leader>d <Action>(Debug)

"" Map \b to toggle the breakpoint on the current line
"map \b <Action>(ToggleLineBreakpoint)

map <Alt-End> <Action>(InsertInlineCompletionLineAction)

" Use EditorEscape when vim visual modes trigger multi-caret that PhpStorm doesn't reset
map <leader>e <Action>(EditorEscape)

set shell=bash.exe
set shellcmdflag=-c

set ideajoin

" other supported options...
" https://github.com/JetBrains/ideavim/blob/master/doc/set-commands.md

" Handlers can be set in Settings, but doing them here lets us use version control.
" The following keys have been mapped to vim, but I've changed some of them to IDE:
sethandler <S-CR> a:ide
sethandler <S-Left> a:ide
sethandler <C-Left> a:ide
sethandler <S-Up> a:ide
sethandler <C-Up> a:ide
sethandler <S-Right> a:ide
sethandler <S-Down> a:ide
sethandler <C-A> a:vim
sethandler <C-B> a:vim
sethandler <C-C> a:vim

" Insert mode: C-E inserts the character which is below the cursor
"              C-Y inserts the character which is above the cursor (remapped as ctrl-u for dvorak)
sethandler <C-E> a:vim
sethandler <C-Y> a:vim
inoremap <C-U> <C-Y>

sethandler <C-F> a:vim
sethandler <C-G> a:ide
sethandler <C-H> a:ide
sethandler <C-I> a:ide
sethandler <C-J> a:ide
sethandler <C-K> a:ide
sethandler <C-L> a:vim
sethandler <C-M> a:ide
sethandler <C-N> a:ide
sethandler <C-U> a:vim
" Cut, copy, and paste are tough to decide on...
sethandler <C-X> a:ide
sethandler <C-P> a:ide
sethandler <C-R> a:vim

" These ones aren't used much in Vim anyway:
sethandler <C-Right> a:ide
sethandler <C-Down> a:ide
sethandler <C-2> a:ide
sethandler <C-S-2> a:ide
sethandler <C-6> a:ide
sethandler <C-S-6> a:ide
sethandler <C-D> a:ide
sethandler <C-O> a:ide
sethandler <C-Q> a:ide
sethandler <C-S> a:ide
sethandler <C-T> a:ide
sethandler <C-[> a:ide
sethandler <C-\> a:ide
sethandler <C-]> a:ide

" Some special cases where we want different handlers depending on the mode:
" Use Ctrl-W as an IDE shortcut in normal and visual modes
sethandler <C-W> n-v:ide i:vim
" Use IDE paste in insert mode. In normal mode, start visual block selection.
sethandler <C-V> i:ide n-v:vim

set clipboard+=unnamed

function! ConvertJSDocParamsToObj()
  :s/@param {\(.*\)} \(.*\)$/\2: \1,/
endfunction

noremap <leader>jo :call ConvertJSDocParamsToObj()<CR>

" Replace JS property dot access with array indexing
nnoremap <leader>.[ s['<Esc>/\W<CR>i']<Esc>:nohl<CR>
